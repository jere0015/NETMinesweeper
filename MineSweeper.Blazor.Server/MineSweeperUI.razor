@inject IGameFactory gameFactory
@inject IConfigFactory configFactory

<h3>MineSweeper</h3>

<button @onclick="@StartGame">Start game</button>

@if (game != null)
{
	switch (game.State.Stage)
	{
		case Stage.Active:
			<table>
				@for (var x = 0; x < boardWidth; x++)
				{
					<tr>
						@for (int y = 0; y < boardHeight; y++)
						{
							//NOTE: https://stackoverflow.com/a/54813295
							int _x = x;
							int _y = y;
							
							var tile = game.State.Board.GetTile(x, y);

							<td @onclick="()=>RevealTile(_x, _y)">@(tile.IsRevealed ? tile.IsMine ? "X" : "_" : "?"),</td>
						}
					</tr>
				}
			</table>
			break;
		case Stage.Lost:
			<div>You lost!</div>
			break;
	}
}

@code {
	// Game instance
	IGame? game = null;

	// Config variables
	int boardWidth = 5;
	int boardHeight = 5;
	int seed = 0;
	Difficulity difficulity = Difficulity.Easy;

	// Handlers
	void StartGame()
	{
		var config = configFactory.Create(boardWidth, boardHeight, seed, difficulity);

		game = gameFactory.Create(config);
	}

	void RevealTile(int x, int y)
	{
		if (game != null && game.State.Stage != Stage.Lost)
		{
			var state = game.RevealTile(x, y);
		}
	}
}
